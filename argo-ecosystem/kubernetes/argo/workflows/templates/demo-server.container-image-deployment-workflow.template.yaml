apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate

metadata:
    name: demo-server-container-image-deployment-workflow-template
    namespace: argo

spec:
    entrypoint: main

    #* workspace to store assets that can be shared among multiple templates
    volumeClaimTemplates:
        - metadata:
            name: demo-server-workspace
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
                requests:
                    storage: 75Mi

    templates:
        - name: main
          dag:
            tasks:
                - name: git-clone
                  template: git-clone-template
                - name: dependencies-installation
                  template: dependencies-installation-template
                - name: container-image-build-and-push
                  template: container-image-build-and-push-template

        - name: git-clone-template
          container:
            image: alpine/git:v2.26.2
            workingDir: /workspace
            volumeMounts:
                - name: demo-server-workspace
                  mountPath: /workspace
            command:
                - git
            args:
                - clone
                - https://github.com/Archisman-Mridha/cloudnative-tools
                - cloudnative-tools

        - name: dependencies-installation-template
          container:
            image: node:18-alpine
            workingDir: /workspace
            volumeMounts:
                - name: demo-server-workspace
                  mountPath: /workspace
            command:
                - npm
            args:
                - install
                - --prefix
                - /workspace/cloudnative-tools/argo-ecosystem/demo-server/

        - name: container-image-build-and-push-template

          #* loading the dockerhub credentials from a Kubernetes secret
          volumes:
            - name: docker-config
              secret:
                secretName: dockerhub-credentials-secret

          container:
            image: moby/buildkit:rootless
            workingDir: /workspace
            volumeMounts:
                - name: demo-server-workspace
                  mountPath: /workspace
                - name: docker-config
                  mountPath: /.docker
            command:
                - buildctl
            args:
                - build
                - --frontend
                - dockerfile.v0
                - --local
                - context=/workspace/cloudnative-tools/argo-ecosystem/demo-server
                - --local
                - dockerfile=/workspace/cloudnative-tools/argo-ecosystem/demo-server/.
                - --output
                - type=image,name=docker.io/archismanmridha/demo-server:1.0.0,push=true