apiVersion: argoproj.io/v1alpha1
kind: Workflow

metadata:
    name: demo-server-workflow
    labels:
        app: demo-server

spec:
    volumeClaimTemplates:
        - metadata:
            name: demo-server-workspace
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
                requests:
                    storage: 50Mi
                limits:
                    storage: 100Mi

    entrypoint: main

    templates:
        - name: main
          dag:
            tasks:
                
                - name: git-clone
                  template: git-clone

                - name: build-and-push
                  template: build-and-push
                  depends: git-clone

        #* clone source git repository into the claimed volume
        - name: git-clone
          container:
            volumeMounts:
                - mountPath: /workspace
                  name: demo-server-workspace
            image: alpine/git:v2.26.2
            workingDir: /workspace
            args:
                - clone
                - --branch
                - main
                - --single-branch
                - https://github.com/Archisman-Mridha/cloudnative-tools.git
                - .

        #* build and push the container image to dockerhub
        - name: build-and-push
          volumes:
            - name: docker-config

              #! use bitnami sealed secrets to automate secret creation in Kubernetes and store them encrypted in github
              #! or create the secret first manually by using the command
              #! kubectl create secret generic docker-config --from-literal="config.json={\"auths\": {\"https://index.docker.io/v1/\": {\"auth\": \"$(echo -n DOCKERHUB_USERNAME:DOCKERHUB_ACCESS_KEY|base64)\"}}}"
              secret:
                secretName: docker-config

          container:
            image: moby/buildkit:v0.9.3-rootless
            volumeMounts:
                - mountPath: /workspace
                  name: demo-server-workspace
                - name: docker-config
                  mountPath: /.docker
            workingDir: /workspace/argo/demo-server
            env:
                - name: BUILDKITD_FLAGS
                  value: --oci-worker-no-process-sandbox
                - name: DOCKER_CONFIG
                  value: /.docker
            command:
                - buildctl-daemonless.sh
            args:
                - build
                - --frontend
                - dockerfile.v0
                - --local
                - context=.
                - --local
                - dockerfile=.
                - --output
                - type=image,name=archismanmridha/demo-server,push=true
